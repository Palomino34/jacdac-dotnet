/** Autogenerated file. Do not edit. */
using Jacdac;
using System;

namespace Jacdac {

    /// <summary>
    /// A sensor that determines the distance of an object without any physical contact involved.
    /// Implements a client for the Distance service.
    /// </summary>
    /// <seealso cref="https://microsoft.github.io/jacdac-docs/services/distance/" />
    public partial class DistanceClient : SensorClient
    {
        public DistanceClient(JDBus bus, string name)
            : base(bus, name, ServiceClasses.Distance)
        {
        }

        /// <summary>
        /// Current distance from the object, _: m
        /// </summary>
        public float Distance
        {
            get
            {
                return (float)this.GetRegisterValue((ushort)DistanceReg.Distance, DistanceRegPack.Distance);
            }
        }

        /// <summary>
        /// (Optional) Absolute error on the reading value., _: m
        /// </summary>
        public float DistanceError
        {
            get
            {
                return (float)this.GetRegisterValue((ushort)DistanceReg.DistanceError, DistanceRegPack.DistanceError);
            }
        }

        /// <summary>
        /// (Optional) Minimum measurable distance, _: m
        /// </summary>
        public float MinRange
        {
            get
            {
                return (float)this.GetRegisterValue((ushort)DistanceReg.MinRange, DistanceRegPack.MinRange);
            }
        }

        /// <summary>
        /// (Optional) Maximum measurable distance, _: m
        /// </summary>
        public float MaxRange
        {
            get
            {
                return (float)this.GetRegisterValue((ushort)DistanceReg.MaxRange, DistanceRegPack.MaxRange);
            }
        }

        /// <summary>
        /// (Optional) Determines the type of sensor used., 
        /// </summary>
        public DistanceVariant Variant
        {
            get
            {
                return (DistanceVariant)this.GetRegisterValue((ushort)DistanceReg.Variant, DistanceRegPack.Variant);
            }
        }


    }
}