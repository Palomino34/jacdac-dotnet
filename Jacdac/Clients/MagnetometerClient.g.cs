/** Autogenerated file. Do not edit. */
using Jacdac;
using System;

namespace Jacdac {

    /// <summary>
    /// A 3-axis magnetometer.
    /// Implements a client for the Magnetometer service.
    /// </summary>
    /// <seealso cref="https://microsoft.github.io/jacdac-docs/services/magnetomer/" />
    public partial class MagnetometerClient : SensorClient
    {
        public MagnetometerClient(JDBus bus, string name)
            : base(bus, ServiceClasses.Magnetometer, name)
        {
        }

        /// <summary>
        /// Indicates the current magnetic field on magnetometer.
        /// For reference: `1 mgauss` is `100 nT` (and `1 gauss` is `100 000 nT`)., x: nT,y: nT,z: nT
        /// </summary>
        public (int, int, int) Forces
        {
            get
            {
                return ((int, int, int))this.GetRegisterValue((ushort)MagnetometerReg.Forces, MagnetometerRegPack.Forces, 1);
            }
        }

        /// <summary>
        /// (Optional) Absolute estimated error on the readings., _: nT
        /// </summary>
        public int ForcesError
        {
            get
            {
                return (int)this.GetRegisterValue((ushort)MagnetometerReg.ForcesError, MagnetometerRegPack.ForcesError, 1);
            }
        }


        /// <summary>
        /// Forces a calibration sequence where the user/device
        /// might have to rotate to be calibrated.
        /// </summary>
        public void Calibrate()
        {
            this.SendCmdPacked((ushort)MagnetometerCmd.Calibrate, MagnetometerCmdPack.Calibrate, new object[] {  });
        }

    }
}