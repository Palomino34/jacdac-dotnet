/** Autogenerated file. Do not edit. */
using Jacdac;
using System;

namespace Jacdac.Clients {

    /// <summary>
    /// A thermometer measuring outside or inside environment.
    /// Implements a client for the Temperature service.
    /// </summary>
    /// <seealso cref="https://microsoft.github.io/jacdac-docs/services/temperature/" />
    public partial class TemperatureClient : SensorClient
    {
        public TemperatureClient(JDBus bus, string name)
            : base(bus, name, ServiceClasses.Temperature)
        {
        }

        /// <summary>
        /// The temperature., _: 째C
        /// </summary>
        public float Temperature
        {
            get
            {
                return (float)this.GetRegisterValue((ushort)TemperatureReg.Temperature, TemperatureRegPack.Temperature);
            }
        }

        /// <summary>
        /// Lowest temperature that can be reported., _: 째C
        /// </summary>
        public float MinTemperature
        {
            get
            {
                return (float)this.GetRegisterValue((ushort)TemperatureReg.MinTemperature, TemperatureRegPack.MinTemperature);
            }
        }

        /// <summary>
        /// Highest temperature that can be reported., _: 째C
        /// </summary>
        public float MaxTemperature
        {
            get
            {
                return (float)this.GetRegisterValue((ushort)TemperatureReg.MaxTemperature, TemperatureRegPack.MaxTemperature);
            }
        }

        /// <summary>
        /// (Optional) The real temperature is between `temperature - temperature_error` and `temperature + temperature_error`., _: 째C
        /// </summary>
        public float TemperatureError
        {
            get
            {
                return (float)this.GetRegisterValue((ushort)TemperatureReg.TemperatureError, TemperatureRegPack.TemperatureError);
            }
        }

        /// <summary>
        /// (Optional) Specifies the type of thermometer., 
        /// </summary>
        public TemperatureVariant Variant
        {
            get
            {
                return (TemperatureVariant)this.GetRegisterValue((ushort)TemperatureReg.Variant, TemperatureRegPack.Variant);
            }
        }


    }
}